{
	"id": "b32342b153bc03a04022250bd1724c0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GiveForever.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface ILido is IERC20 {\r\n    function submit(address _referral) external payable returns(uint256 StETH);\r\n    function withdraw(uint256 _amount, bytes32 _pubkeyHash) external;\r\n    function sharesOf(address _owner) external returns(uint balance);\r\n}\r\n\r\ncontract GiveForever {\r\n    address public charity = 0xAc241E664D7B7bD780f549b46345fcE584E789C1;\r\n    address public stETH = 0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F;\r\n    uint public donated;\r\n\r\n    function deposit() payable public {\r\n        ILido(stETH).submit{value: msg.value}(address(this));\r\n        donated += msg.value;\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint balance = ILido(stETH).balanceOf(address(this));\r\n        uint surplus = balance - donated;\r\n        require(surplus > 0, \"Nothing to return\");\r\n        ILido(stETH).transfer(charity,surplus);\r\n    }\r\n\r\n    function updateWallet(address _newAddress) public {\r\n        require(msg.sender == charity, \"Only charity can update wallet\");\r\n        charity = _newAddress;\r\n    }\r\n    \r\n}\r\n\r\n/*ragma solidity ^0.8.0;\r\ncontract GiveForever {\r\n    string hi = \"Hello World\";\r\n\r\n    function hello() external view returns (string memory) {\r\n        return hi;\r\n    }\r\n}*/"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GiveForever.sol": {
				"GiveForever": {
					"abi": [
						{
							"inputs": [],
							"name": "charity",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAddress",
									"type": "address"
								}
							],
							"name": "updateWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GiveForever.sol\":388:1158  contract GiveForever {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GiveForever.sol\":441:483  0xAc241E664D7B7bD780f549b46345fcE584E789C1 */\n  0xac241e664d7b7bd780f549b46345fce584e789c1\n    /* \"contracts/GiveForever.sol\":416:483  address public charity = 0xAc241E664D7B7bD780f549b46345fcE584E789C1 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GiveForever.sol\":513:555  0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F */\n  0x1643e812ae58766192cf7d2cf9567df2c37e9b7f\n    /* \"contracts/GiveForever.sol\":490:555  address public stETH = 0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GiveForever.sol\":388:1158  contract GiveForever {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GiveForever.sol\":388:1158  contract GiveForever {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x639bbb37\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x848b86e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x934aa023\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc1fe3e48\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GiveForever.sol\":734:976  function withdraw() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/GiveForever.sol\":562:581  uint public donated */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GiveForever.sol\":984:1149  function updateWallet(address _newAddress) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/GiveForever.sol\":416:483  address public charity = 0xAc241E664D7B7bD780f549b46345fcE584E789C1 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GiveForever.sol\":490:555  address public stETH = 0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GiveForever.sol\":590:726  function deposit() payable public {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/GiveForever.sol\":734:976  function withdraw() public {... */\n    tag_10:\n        /* \"contracts/GiveForever.sol\":772:784  uint balance */\n      0x00\n        /* \"contracts/GiveForever.sol\":793:798  stETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":787:809  ILido(stETH).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/GiveForever.sol\":818:822  this */\n      address\n        /* \"contracts/GiveForever.sol\":787:824  ILido(stETH).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"contracts/GiveForever.sol\":772:824  uint balance = ILido(stETH).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/GiveForever.sol\":835:847  uint surplus */\n      0x00\n        /* \"contracts/GiveForever.sol\":860:867  donated */\n      sload(0x02)\n        /* \"contracts/GiveForever.sol\":850:857  balance */\n      dup3\n        /* \"contracts/GiveForever.sol\":850:867  balance - donated */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/GiveForever.sol\":835:867  uint surplus = balance - donated */\n      swap1\n      pop\n        /* \"contracts/GiveForever.sol\":896:897  0 */\n      0x00\n        /* \"contracts/GiveForever.sol\":886:893  surplus */\n      dup2\n        /* \"contracts/GiveForever.sol\":886:897  surplus > 0 */\n      gt\n        /* \"contracts/GiveForever.sol\":878:919  require(surplus > 0, \"Nothing to return\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/GiveForever.sol\":936:941  stETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":930:951  ILido(stETH).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/GiveForever.sol\":952:959  charity */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":960:967  surplus */\n      dup4\n        /* \"contracts/GiveForever.sol\":930:968  ILido(stETH).transfer(charity,surplus) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      pop\n        /* \"contracts/GiveForever.sol\":761:976  {... */\n      pop\n      pop\n        /* \"contracts/GiveForever.sol\":734:976  function withdraw() public {... */\n      jump\t// out\n        /* \"contracts/GiveForever.sol\":562:581  uint public donated */\n    tag_13:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/GiveForever.sol\":984:1149  function updateWallet(address _newAddress) public {... */\n    tag_20:\n        /* \"contracts/GiveForever.sol\":1067:1074  charity */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":1053:1074  msg.sender == charity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":1053:1063  msg.sender */\n      caller\n        /* \"contracts/GiveForever.sol\":1053:1074  msg.sender == charity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/GiveForever.sol\":1045:1109  require(msg.sender == charity, \"Only charity can update wallet\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/GiveForever.sol\":1130:1141  _newAddress */\n      dup1\n        /* \"contracts/GiveForever.sol\":1120:1127  charity */\n      0x00\n      dup1\n        /* \"contracts/GiveForever.sol\":1120:1141  charity = _newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GiveForever.sol\":984:1149  function updateWallet(address _newAddress) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/GiveForever.sol\":416:483  address public charity = 0xAc241E664D7B7bD780f549b46345fcE584E789C1 */\n    tag_23:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GiveForever.sol\":490:555  address public stETH = 0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GiveForever.sol\":590:726  function deposit() payable public {... */\n    tag_31:\n        /* \"contracts/GiveForever.sol\":641:646  stETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GiveForever.sol\":635:654  ILido(stETH).submit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1903eab\n        /* \"contracts/GiveForever.sol\":662:671  msg.value */\n      callvalue\n        /* \"contracts/GiveForever.sol\":681:685  this */\n      address\n        /* \"contracts/GiveForever.sol\":635:687  ILido(stETH).submit{value: msg.value}(address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      pop\n        /* \"contracts/GiveForever.sol\":709:718  msg.value */\n      callvalue\n        /* \"contracts/GiveForever.sol\":698:705  donated */\n      0x02\n      0x00\n        /* \"contracts/GiveForever.sol\":698:718  donated += msg.value */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GiveForever.sol\":590:726  function deposit() payable public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_60:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_61:\n        /* \"#utility.yul\":177:201   */\n      tag_84\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_60\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_86\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_61\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_63:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_65:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_66:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_92\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_65\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_67:\n        /* \"#utility.yul\":1076:1100   */\n      tag_94\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_66\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_95:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_68:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_97\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_67\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_19:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_100\n      tag_63\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1352:1471   */\n    tag_99:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_101\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_68\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_69:\n        /* \"#utility.yul\":1698:1722   */\n      tag_103\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_66\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_25:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_105\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_69\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_70:\n        /* \"#utility.yul\":2036:2060   */\n      tag_107\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_60\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_108:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2234   */\n    tag_71:\n        /* \"#utility.yul\":2148:2153   */\n      0x00\n        /* \"#utility.yul\":2179:2185   */\n      dup2\n        /* \"#utility.yul\":2173:2186   */\n      mload\n        /* \"#utility.yul\":2164:2186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2195:2228   */\n      tag_110\n        /* \"#utility.yul\":2222:2227   */\n      dup2\n        /* \"#utility.yul\":2195:2228   */\n      tag_70\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2091:2234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2591   */\n    tag_37:\n        /* \"#utility.yul\":2310:2316   */\n      0x00\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2347:2356   */\n      dup3\n        /* \"#utility.yul\":2338:2345   */\n      dup5\n        /* \"#utility.yul\":2334:2357   */\n      sub\n        /* \"#utility.yul\":2330:2362   */\n      slt\n        /* \"#utility.yul\":2327:2446   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":2365:2444   */\n      tag_113\n      tag_63\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2327:2446   */\n    tag_112:\n        /* \"#utility.yul\":2485:2486   */\n      0x00\n        /* \"#utility.yul\":2510:2574   */\n      tag_114\n        /* \"#utility.yul\":2566:2573   */\n      dup5\n        /* \"#utility.yul\":2557:2563   */\n      dup3\n        /* \"#utility.yul\":2546:2555   */\n      dup6\n        /* \"#utility.yul\":2542:2564   */\n      add\n        /* \"#utility.yul\":2510:2574   */\n      tag_71\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2500:2574   */\n      swap2\n      pop\n        /* \"#utility.yul\":2456:2584   */\n      pop\n        /* \"#utility.yul\":2240:2591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2597:2777   */\n    tag_72:\n        /* \"#utility.yul\":2645:2722   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2642:2643   */\n      0x00\n        /* \"#utility.yul\":2635:2723   */\n      mstore\n        /* \"#utility.yul\":2742:2746   */\n      0x11\n        /* \"#utility.yul\":2739:2740   */\n      0x04\n        /* \"#utility.yul\":2732:2747   */\n      mstore\n        /* \"#utility.yul\":2766:2770   */\n      0x24\n        /* \"#utility.yul\":2763:2764   */\n      0x00\n        /* \"#utility.yul\":2756:2771   */\n      revert\n        /* \"#utility.yul\":2783:2977   */\n    tag_39:\n        /* \"#utility.yul\":2823:2827   */\n      0x00\n        /* \"#utility.yul\":2843:2863   */\n      tag_117\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2843:2863   */\n      tag_60\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2838:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2877:2897   */\n      tag_118\n        /* \"#utility.yul\":2895:2896   */\n      dup4\n        /* \"#utility.yul\":2877:2897   */\n      tag_60\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2872:2897   */\n      swap3\n      pop\n        /* \"#utility.yul\":2921:2922   */\n      dup3\n        /* \"#utility.yul\":2918:2919   */\n      dup3\n        /* \"#utility.yul\":2914:2923   */\n      sub\n        /* \"#utility.yul\":2906:2923   */\n      swap1\n      pop\n        /* \"#utility.yul\":2945:2946   */\n      dup2\n        /* \"#utility.yul\":2939:2943   */\n      dup2\n        /* \"#utility.yul\":2936:2947   */\n      gt\n        /* \"#utility.yul\":2933:2970   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2950:2968   */\n      tag_120\n      tag_72\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2933:2970   */\n    tag_119:\n        /* \"#utility.yul\":2783:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3152   */\n    tag_73:\n        /* \"#utility.yul\":3067:3078   */\n      0x00\n        /* \"#utility.yul\":3101:3107   */\n      dup3\n        /* \"#utility.yul\":3096:3099   */\n      dup3\n        /* \"#utility.yul\":3089:3108   */\n      mstore\n        /* \"#utility.yul\":3141:3145   */\n      0x20\n        /* \"#utility.yul\":3136:3139   */\n      dup3\n        /* \"#utility.yul\":3132:3146   */\n      add\n        /* \"#utility.yul\":3117:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2983:3152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3325   */\n    tag_74:\n        /* \"#utility.yul\":3298:3317   */\n      0x4e6f7468696e6720746f2072657475726e000000000000000000000000000000\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3286:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3296   */\n      add\n        /* \"#utility.yul\":3275:3318   */\n      mstore\n        /* \"#utility.yul\":3158:3325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3697   */\n    tag_75:\n        /* \"#utility.yul\":3473:3476   */\n      0x00\n        /* \"#utility.yul\":3494:3561   */\n      tag_124\n        /* \"#utility.yul\":3558:3560   */\n      0x11\n        /* \"#utility.yul\":3553:3556   */\n      dup4\n        /* \"#utility.yul\":3494:3561   */\n      tag_73\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3487:3561   */\n      swap2\n      pop\n        /* \"#utility.yul\":3570:3663   */\n      tag_125\n        /* \"#utility.yul\":3659:3662   */\n      dup3\n        /* \"#utility.yul\":3570:3663   */\n      tag_74\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3688:3690   */\n      0x20\n        /* \"#utility.yul\":3683:3686   */\n      dup3\n        /* \"#utility.yul\":3679:3691   */\n      add\n        /* \"#utility.yul\":3672:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3331:3697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:4122   */\n    tag_42:\n        /* \"#utility.yul\":3869:3873   */\n      0x00\n        /* \"#utility.yul\":3907:3909   */\n      0x20\n        /* \"#utility.yul\":3896:3905   */\n      dup3\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3884:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3956:3965   */\n      dup2\n        /* \"#utility.yul\":3950:3954   */\n      dup2\n        /* \"#utility.yul\":3946:3966   */\n      sub\n        /* \"#utility.yul\":3942:3943   */\n      0x00\n        /* \"#utility.yul\":3931:3940   */\n      dup4\n        /* \"#utility.yul\":3927:3944   */\n      add\n        /* \"#utility.yul\":3920:3967   */\n      mstore\n        /* \"#utility.yul\":3984:4115   */\n      tag_127\n        /* \"#utility.yul\":4110:4114   */\n      dup2\n        /* \"#utility.yul\":3984:4115   */\n      tag_75\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3976:4115   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:4122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4128:4460   */\n    tag_44:\n        /* \"#utility.yul\":4249:4253   */\n      0x00\n        /* \"#utility.yul\":4287:4289   */\n      0x40\n        /* \"#utility.yul\":4276:4285   */\n      dup3\n        /* \"#utility.yul\":4272:4290   */\n      add\n        /* \"#utility.yul\":4264:4290   */\n      swap1\n      pop\n        /* \"#utility.yul\":4300:4371   */\n      tag_129\n        /* \"#utility.yul\":4368:4369   */\n      0x00\n        /* \"#utility.yul\":4357:4366   */\n      dup4\n        /* \"#utility.yul\":4353:4370   */\n      add\n        /* \"#utility.yul\":4344:4350   */\n      dup6\n        /* \"#utility.yul\":4300:4371   */\n      tag_69\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4381:4453   */\n      tag_130\n        /* \"#utility.yul\":4449:4451   */\n      0x20\n        /* \"#utility.yul\":4438:4447   */\n      dup4\n        /* \"#utility.yul\":4434:4452   */\n      add\n        /* \"#utility.yul\":4425:4431   */\n      dup5\n        /* \"#utility.yul\":4381:4453   */\n      tag_61\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4128:4460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4466:4556   */\n    tag_76:\n        /* \"#utility.yul\":4500:4507   */\n      0x00\n        /* \"#utility.yul\":4543:4548   */\n      dup2\n        /* \"#utility.yul\":4536:4549   */\n      iszero\n        /* \"#utility.yul\":4529:4550   */\n      iszero\n        /* \"#utility.yul\":4518:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4466:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4678   */\n    tag_77:\n        /* \"#utility.yul\":4632:4653   */\n      tag_133\n        /* \"#utility.yul\":4647:4652   */\n      dup2\n        /* \"#utility.yul\":4632:4653   */\n      tag_76\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4625:4630   */\n      dup2\n        /* \"#utility.yul\":4622:4654   */\n      eq\n        /* \"#utility.yul\":4612:4672   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4668:4669   */\n      0x00\n        /* \"#utility.yul\":4665:4666   */\n      dup1\n        /* \"#utility.yul\":4658:4670   */\n      revert\n        /* \"#utility.yul\":4612:4672   */\n    tag_134:\n        /* \"#utility.yul\":4562:4678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4684:4821   */\n    tag_78:\n        /* \"#utility.yul\":4738:4743   */\n      0x00\n        /* \"#utility.yul\":4769:4775   */\n      dup2\n        /* \"#utility.yul\":4763:4776   */\n      mload\n        /* \"#utility.yul\":4754:4776   */\n      swap1\n      pop\n        /* \"#utility.yul\":4785:4815   */\n      tag_136\n        /* \"#utility.yul\":4809:4814   */\n      dup2\n        /* \"#utility.yul\":4785:4815   */\n      tag_77\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4684:4821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4827:5172   */\n    tag_48:\n        /* \"#utility.yul\":4894:4900   */\n      0x00\n        /* \"#utility.yul\":4943:4945   */\n      0x20\n        /* \"#utility.yul\":4931:4940   */\n      dup3\n        /* \"#utility.yul\":4922:4929   */\n      dup5\n        /* \"#utility.yul\":4918:4941   */\n      sub\n        /* \"#utility.yul\":4914:4946   */\n      slt\n        /* \"#utility.yul\":4911:5030   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4949:5028   */\n      tag_139\n      tag_63\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4911:5030   */\n    tag_138:\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5094:5155   */\n      tag_140\n        /* \"#utility.yul\":5147:5154   */\n      dup5\n        /* \"#utility.yul\":5138:5144   */\n      dup3\n        /* \"#utility.yul\":5127:5136   */\n      dup6\n        /* \"#utility.yul\":5123:5145   */\n      add\n        /* \"#utility.yul\":5094:5155   */\n      tag_78\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5084:5155   */\n      swap2\n      pop\n        /* \"#utility.yul\":5040:5165   */\n      pop\n        /* \"#utility.yul\":4827:5172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5178:5358   */\n    tag_79:\n        /* \"#utility.yul\":5318:5350   */\n      0x4f6e6c7920636861726974792063616e207570646174652077616c6c65740000\n        /* \"#utility.yul\":5314:5315   */\n      0x00\n        /* \"#utility.yul\":5306:5312   */\n      dup3\n        /* \"#utility.yul\":5302:5316   */\n      add\n        /* \"#utility.yul\":5295:5351   */\n      mstore\n        /* \"#utility.yul\":5178:5358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5730   */\n    tag_80:\n        /* \"#utility.yul\":5506:5509   */\n      0x00\n        /* \"#utility.yul\":5527:5594   */\n      tag_143\n        /* \"#utility.yul\":5591:5593   */\n      0x1e\n        /* \"#utility.yul\":5586:5589   */\n      dup4\n        /* \"#utility.yul\":5527:5594   */\n      tag_73\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5520:5594   */\n      swap2\n      pop\n        /* \"#utility.yul\":5603:5696   */\n      tag_144\n        /* \"#utility.yul\":5692:5695   */\n      dup3\n        /* \"#utility.yul\":5603:5696   */\n      tag_79\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5721:5723   */\n      0x20\n        /* \"#utility.yul\":5716:5719   */\n      dup3\n        /* \"#utility.yul\":5712:5724   */\n      add\n        /* \"#utility.yul\":5705:5724   */\n      swap1\n      pop\n        /* \"#utility.yul\":5364:5730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5736:6155   */\n    tag_52:\n        /* \"#utility.yul\":5902:5906   */\n      0x00\n        /* \"#utility.yul\":5940:5942   */\n      0x20\n        /* \"#utility.yul\":5929:5938   */\n      dup3\n        /* \"#utility.yul\":5925:5943   */\n      add\n        /* \"#utility.yul\":5917:5943   */\n      swap1\n      pop\n        /* \"#utility.yul\":5989:5998   */\n      dup2\n        /* \"#utility.yul\":5983:5987   */\n      dup2\n        /* \"#utility.yul\":5979:5999   */\n      sub\n        /* \"#utility.yul\":5975:5976   */\n      0x00\n        /* \"#utility.yul\":5964:5973   */\n      dup4\n        /* \"#utility.yul\":5960:5977   */\n      add\n        /* \"#utility.yul\":5953:6000   */\n      mstore\n        /* \"#utility.yul\":6017:6148   */\n      tag_146\n        /* \"#utility.yul\":6143:6147   */\n      dup2\n        /* \"#utility.yul\":6017:6148   */\n      tag_80\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6009:6148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5736:6155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6161:6352   */\n    tag_59:\n        /* \"#utility.yul\":6201:6204   */\n      0x00\n        /* \"#utility.yul\":6220:6240   */\n      tag_148\n        /* \"#utility.yul\":6238:6239   */\n      dup3\n        /* \"#utility.yul\":6220:6240   */\n      tag_60\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6215:6240   */\n      swap2\n      pop\n        /* \"#utility.yul\":6254:6274   */\n      tag_149\n        /* \"#utility.yul\":6272:6273   */\n      dup4\n        /* \"#utility.yul\":6254:6274   */\n      tag_60\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6249:6274   */\n      swap3\n      pop\n        /* \"#utility.yul\":6297:6298   */\n      dup3\n        /* \"#utility.yul\":6294:6295   */\n      dup3\n        /* \"#utility.yul\":6290:6299   */\n      add\n        /* \"#utility.yul\":6283:6299   */\n      swap1\n      pop\n        /* \"#utility.yul\":6318:6321   */\n      dup1\n        /* \"#utility.yul\":6315:6316   */\n      dup3\n        /* \"#utility.yul\":6312:6322   */\n      gt\n        /* \"#utility.yul\":6309:6345   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":6325:6343   */\n      tag_151\n      tag_72\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6309:6345   */\n    tag_150:\n        /* \"#utility.yul\":6161:6352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ffa82eaff2b7847f4b350c42a46bae973c43cbd43924a9cc575ed6430735593164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ac241e664d7b7bd780f549b46345fce584e789c16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731643e812ae58766192cf7d2cf9567df2c37e9b7f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b50610846806100c96000396000f3fe6080604052600436106100555760003560e01c80633ccfd60b1461005a578063639bbb3714610071578063848b86e31461009c578063934aa023146100c5578063c1fe3e48146100f0578063d0e30db01461011b575b600080fd5b34801561006657600080fd5b5061006f610125565b005b34801561007d57600080fd5b506100866102df565b60405161009391906104d4565b60405180910390f35b3480156100a857600080fd5b506100c360048036038101906100be9190610552565b6102e5565b005b3480156100d157600080fd5b506100da6103b6565b6040516100e7919061058e565b60405180910390f35b3480156100fc57600080fd5b506101056103da565b604051610112919061058e565b60405180910390f35b610123610400565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610182919061058e565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906105d5565b90506000600254826101d59190610631565b90506000811161021a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610211906106c2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102979291906106e2565b6020604051808303816000875af11580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190610743565b505050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a906107bc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1903eab34306040518363ffffffff1660e01b815260040161045c919061058e565b60206040518083038185885af115801561047a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061049f91906105d5565b5034600260008282546104b291906107dc565b92505081905550565b6000819050919050565b6104ce816104bb565b82525050565b60006020820190506104e960008301846104c5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061051f826104f4565b9050919050565b61052f81610514565b811461053a57600080fd5b50565b60008135905061054c81610526565b92915050565b600060208284031215610568576105676104ef565b5b60006105768482850161053d565b91505092915050565b61058881610514565b82525050565b60006020820190506105a3600083018461057f565b92915050565b6105b2816104bb565b81146105bd57600080fd5b50565b6000815190506105cf816105a9565b92915050565b6000602082840312156105eb576105ea6104ef565b5b60006105f9848285016105c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061063c826104bb565b9150610647836104bb565b925082820390508181111561065f5761065e610602565b5b92915050565b600082825260208201905092915050565b7f4e6f7468696e6720746f2072657475726e000000000000000000000000000000600082015250565b60006106ac601183610665565b91506106b782610676565b602082019050919050565b600060208201905081810360008301526106db8161069f565b9050919050565b60006040820190506106f7600083018561057f565b61070460208301846104c5565b9392505050565b60008115159050919050565b6107208161070b565b811461072b57600080fd5b50565b60008151905061073d81610717565b92915050565b600060208284031215610759576107586104ef565b5b60006107678482850161072e565b91505092915050565b7f4f6e6c7920636861726974792063616e207570646174652077616c6c65740000600082015250565b60006107a6601e83610665565b91506107b182610770565b602082019050919050565b600060208201905081810360008301526107d581610799565b9050919050565b60006107e7826104bb565b91506107f2836104bb565b925082820190508082111561080a57610809610602565b5b9291505056fea2646970667358221220ffa82eaff2b7847f4b350c42a46bae973c43cbd43924a9cc575ed6430735593164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAC241E664D7B7BD780F549B46345FCE584E789C1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1643E812AE58766192CF7D2CF9567DF2C37E9B7F PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x846 DUP1 PUSH2 0xC9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x639BBB37 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x848B86E3 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP3 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1903EAB CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CE DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP3 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP2 PUSH2 0x514 JUMP JUMPDEST DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54C DUP2 PUSH2 0x526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP5 DUP3 DUP6 ADD PUSH2 0x53D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B2 DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CF DUP2 PUSH2 0x5A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EA PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP5 DUP3 DUP6 ADD PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63C DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x647 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x65F JUMPI PUSH2 0x65E PUSH2 0x602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F2072657475726E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC PUSH1 0x11 DUP4 PUSH2 0x665 JUMP JUMPDEST SWAP2 POP PUSH2 0x6B7 DUP3 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DB DUP2 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6F7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x704 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x720 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x73D DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x759 JUMPI PUSH2 0x758 PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x767 DUP5 DUP3 DUP6 ADD PUSH2 0x72E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920636861726974792063616E207570646174652077616C6C65740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x1E DUP4 PUSH2 0x665 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D5 DUP2 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E7 DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x7F2 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xA8 0x2E 0xAF CALLCODE 0xB7 DUP5 PUSH32 0x4B350C42A46BAE973C43CBD43924A9CC575ED6430735593164736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "388:770:1:-:0;;;441:42;416:67;;;;;;;;;;;;;;;;;;;;513:42;490:65;;;;;;;;;;;;;;;;;;;;388:770;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@charity_107": {
									"entryPoint": 950,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_134": {
									"entryPoint": 1024,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donated_112": {
									"entryPoint": 735,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stETH_110": {
									"entryPoint": 986,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateWallet_189": {
									"entryPoint": 741,
									"id": 189,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_171": {
									"entryPoint": 293,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6355:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:2",
														"type": ""
													}
												],
												"src": "769:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:2",
														"type": ""
													}
												],
												"src": "901:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:2"
															},
															"nodeType": "YulIf",
															"src": "1056:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:2",
														"type": ""
													}
												],
												"src": "1003:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"src": "1131:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:2"
															},
															"nodeType": "YulIf",
															"src": "1352:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:2",
														"type": ""
													}
												],
												"src": "1276:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													}
												],
												"src": "1611:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:2",
														"type": ""
													}
												],
												"src": "1735:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:2"
															},
															"nodeType": "YulIf",
															"src": "2016:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:2",
														"type": ""
													}
												],
												"src": "1963:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2154:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2164:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2173:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2164:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2222:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2195:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2195:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2132:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2140:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2148:5:2",
														"type": ""
													}
												],
												"src": "2091:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2363:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2365:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2338:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2347:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:32:2"
															},
															"nodeType": "YulIf",
															"src": "2327:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2456:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2471:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2475:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2500:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2546:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2557:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2542:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2542:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2566:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2510:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2510:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2500:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2287:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2298:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2310:6:2",
														"type": ""
													}
												],
												"src": "2240:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2625:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2635:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2742:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2732:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2763:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2766:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2756:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2597:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2861:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2843:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2838:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2872:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2895:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2877:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2872:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2906:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2918:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2921:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2906:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2948:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2950:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2950:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2950:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2939:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2945:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2936:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2936:11:2"
															},
															"nodeType": "YulIf",
															"src": "2933:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2814:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2817:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2823:4:2",
														"type": ""
													}
												],
												"src": "2783:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3079:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3096:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3101:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3089:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3117:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3136:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3117:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3051:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3056:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3067:11:2",
														"type": ""
													}
												],
												"src": "2983:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3264:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3294:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:14:2"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f2072657475726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3298:19:2",
																		"type": "",
																		"value": "Nothing to return"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:43:2"
														}
													]
												},
												"name": "store_literal_in_memory_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3256:6:2",
														"type": ""
													}
												],
												"src": "3158:167:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3477:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3487:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3553:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3494:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3487:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3659:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e",
																	"nodeType": "YulIdentifier",
																	"src": "3570:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3570:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3672:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3683:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3679:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3672:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3465:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3473:3:2",
														"type": ""
													}
												],
												"src": "3331:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3874:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3884:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3896:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3884:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3942:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3950:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3946:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3946:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3976:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4110:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3984:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3976:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3854:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3869:4:2",
														"type": ""
													}
												],
												"src": "3703:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4254:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4264:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4276:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4287:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4264:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4344:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4357:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4368:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4353:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4353:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4300:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4300:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4425:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4381:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4381:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4218:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4230:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4238:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4249:4:2",
														"type": ""
													}
												],
												"src": "4128:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4508:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4518:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4543:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4536:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4536:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4518:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4490:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4500:7:2",
														"type": ""
													}
												],
												"src": "4466:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4602:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4656:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4665:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4658:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4658:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4658:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4625:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4647:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4632:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4632:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4622:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4622:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:40:2"
															},
															"nodeType": "YulIf",
															"src": "4612:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4595:5:2",
														"type": ""
													}
												],
												"src": "4562:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4744:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4754:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4769:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4763:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4754:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4809:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4785:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4785:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4722:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4730:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4738:5:2",
														"type": ""
													}
												],
												"src": "4684:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4901:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4947:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4949:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4949:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4949:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4922:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4931:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4914:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4914:32:2"
															},
															"nodeType": "YulIf",
															"src": "4911:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5040:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5055:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5069:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5059:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5084:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5127:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5138:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5123:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5123:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5147:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5094:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5094:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5084:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4871:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4882:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4894:6:2",
														"type": ""
													}
												],
												"src": "4827:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5306:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5302:14:2"
																	},
																	{
																		"hexValue": "4f6e6c7920636861726974792063616e207570646174652077616c6c6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5318:32:2",
																		"type": "",
																		"value": "Only charity can update wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:56:2"
														}
													]
												},
												"name": "store_literal_in_memory_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:2",
														"type": ""
													}
												],
												"src": "5178:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5510:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5520:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:2",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5527:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5520:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5692:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693",
																	"nodeType": "YulIdentifier",
																	"src": "5603:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5705:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5721:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5712:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5498:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5506:3:2",
														"type": ""
													}
												],
												"src": "5364:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5907:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5917:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5929:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5917:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5975:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5960:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5960:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5983:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5989:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5953:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5953:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6009:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6143:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6017:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6017:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6009:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5887:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5902:4:2",
														"type": ""
													}
												],
												"src": "5736:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6215:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6220:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6215:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6249:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6272:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6254:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6249:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6283:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6294:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6297:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6283:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6323:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6325:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6325:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6325:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6315:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6318:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6312:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:10:2"
															},
															"nodeType": "YulIf",
															"src": "6309:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6192:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6195:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6201:3:2",
														"type": ""
													}
												],
												"src": "6161:191:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to return\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only charity can update wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80633ccfd60b1461005a578063639bbb3714610071578063848b86e31461009c578063934aa023146100c5578063c1fe3e48146100f0578063d0e30db01461011b575b600080fd5b34801561006657600080fd5b5061006f610125565b005b34801561007d57600080fd5b506100866102df565b60405161009391906104d4565b60405180910390f35b3480156100a857600080fd5b506100c360048036038101906100be9190610552565b6102e5565b005b3480156100d157600080fd5b506100da6103b6565b6040516100e7919061058e565b60405180910390f35b3480156100fc57600080fd5b506101056103da565b604051610112919061058e565b60405180910390f35b610123610400565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610182919061058e565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906105d5565b90506000600254826101d59190610631565b90506000811161021a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610211906106c2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102979291906106e2565b6020604051808303816000875af11580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190610743565b505050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a906107bc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1903eab34306040518363ffffffff1660e01b815260040161045c919061058e565b60206040518083038185885af115801561047a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061049f91906105d5565b5034600260008282546104b291906107dc565b92505081905550565b6000819050919050565b6104ce816104bb565b82525050565b60006020820190506104e960008301846104c5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061051f826104f4565b9050919050565b61052f81610514565b811461053a57600080fd5b50565b60008135905061054c81610526565b92915050565b600060208284031215610568576105676104ef565b5b60006105768482850161053d565b91505092915050565b61058881610514565b82525050565b60006020820190506105a3600083018461057f565b92915050565b6105b2816104bb565b81146105bd57600080fd5b50565b6000815190506105cf816105a9565b92915050565b6000602082840312156105eb576105ea6104ef565b5b60006105f9848285016105c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061063c826104bb565b9150610647836104bb565b925082820390508181111561065f5761065e610602565b5b92915050565b600082825260208201905092915050565b7f4e6f7468696e6720746f2072657475726e000000000000000000000000000000600082015250565b60006106ac601183610665565b91506106b782610676565b602082019050919050565b600060208201905081810360008301526106db8161069f565b9050919050565b60006040820190506106f7600083018561057f565b61070460208301846104c5565b9392505050565b60008115159050919050565b6107208161070b565b811461072b57600080fd5b50565b60008151905061073d81610717565b92915050565b600060208284031215610759576107586104ef565b5b60006107678482850161072e565b91505092915050565b7f4f6e6c7920636861726974792063616e207570646174652077616c6c65740000600082015250565b60006107a6601e83610665565b91506107b182610770565b602082019050919050565b600060208201905081810360008301526107d581610799565b9050919050565b60006107e7826104bb565b91506107f2836104bb565b925082820190508082111561080a57610809610602565b5b9291505056fea2646970667358221220ffa82eaff2b7847f4b350c42a46bae973c43cbd43924a9cc575ed6430735593164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x639BBB37 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x848B86E3 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xC1FE3E48 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP3 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1903EAB CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x5D5 JUMP JUMPDEST POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CE DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP3 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP2 PUSH2 0x514 JUMP JUMPDEST DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x54C DUP2 PUSH2 0x526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP5 DUP3 DUP6 ADD PUSH2 0x53D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B2 DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CF DUP2 PUSH2 0x5A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EA PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5F9 DUP5 DUP3 DUP6 ADD PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63C DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x647 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x65F JUMPI PUSH2 0x65E PUSH2 0x602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F2072657475726E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC PUSH1 0x11 DUP4 PUSH2 0x665 JUMP JUMPDEST SWAP2 POP PUSH2 0x6B7 DUP3 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DB DUP2 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6F7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x704 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x720 DUP2 PUSH2 0x70B JUMP JUMPDEST DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x73D DUP2 PUSH2 0x717 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x759 JUMPI PUSH2 0x758 PUSH2 0x4EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x767 DUP5 DUP3 DUP6 ADD PUSH2 0x72E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920636861726974792063616E207570646174652077616C6C65740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x1E DUP4 PUSH2 0x665 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D5 DUP2 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E7 DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x7F2 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xA8 0x2E 0xAF CALLCODE 0xB7 DUP5 PUSH32 0x4B350C42A46BAE973C43CBD43924A9CC575ED6430735593164736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "388:770:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:242;;;;;;;;;;;;;:::i;:::-;;562:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:67;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:65;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:136;;;:::i;:::-;;734:242;772:12;793:5;;;;;;;;;;;787:22;;;818:4;787:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;772:52;;835:12;860:7;;850;:17;;;;:::i;:::-;835:32;;896:1;886:7;:11;878:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;936:5;;;;;;;;;;;930:21;;;952:7;;;;;;;;;;960;930:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;761:215;;734:242::o;562:19::-;;;;:::o;984:165::-;1067:7;;;;;;;;;;1053:21;;:10;:21;;;1045:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1130:11;1120:7;;:21;;;;;;;;;;;;;;;;;;984:165;:::o;416:67::-;;;;;;;;;;;;:::o;490:65::-;;;;;;;;;;;;;:::o;590:136::-;641:5;;;;;;;;;;;635:19;;;662:9;681:4;635:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;709:9;698:7;;:20;;;;;;;:::i;:::-;;;;;;;;590:136::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:143::-;2148:5;2179:6;2173:13;2164:22;;2195:33;2222:5;2195:33;:::i;:::-;2091:143;;;;:::o;2240:351::-;2310:6;2359:2;2347:9;2338:7;2334:23;2330:32;2327:119;;;2365:79;;:::i;:::-;2327:119;2485:1;2510:64;2566:7;2557:6;2546:9;2542:22;2510:64;:::i;:::-;2500:74;;2456:128;2240:351;;;;:::o;2597:180::-;2645:77;2642:1;2635:88;2742:4;2739:1;2732:15;2766:4;2763:1;2756:15;2783:194;2823:4;2843:20;2861:1;2843:20;:::i;:::-;2838:25;;2877:20;2895:1;2877:20;:::i;:::-;2872:25;;2921:1;2918;2914:9;2906:17;;2945:1;2939:4;2936:11;2933:37;;;2950:18;;:::i;:::-;2933:37;2783:194;;;;:::o;2983:169::-;3067:11;3101:6;3096:3;3089:19;3141:4;3136:3;3132:14;3117:29;;2983:169;;;;:::o;3158:167::-;3298:19;3294:1;3286:6;3282:14;3275:43;3158:167;:::o;3331:366::-;3473:3;3494:67;3558:2;3553:3;3494:67;:::i;:::-;3487:74;;3570:93;3659:3;3570:93;:::i;:::-;3688:2;3683:3;3679:12;3672:19;;3331:366;;;:::o;3703:419::-;3869:4;3907:2;3896:9;3892:18;3884:26;;3956:9;3950:4;3946:20;3942:1;3931:9;3927:17;3920:47;3984:131;4110:4;3984:131;:::i;:::-;3976:139;;3703:419;;;:::o;4128:332::-;4249:4;4287:2;4276:9;4272:18;4264:26;;4300:71;4368:1;4357:9;4353:17;4344:6;4300:71;:::i;:::-;4381:72;4449:2;4438:9;4434:18;4425:6;4381:72;:::i;:::-;4128:332;;;;;:::o;4466:90::-;4500:7;4543:5;4536:13;4529:21;4518:32;;4466:90;;;:::o;4562:116::-;4632:21;4647:5;4632:21;:::i;:::-;4625:5;4622:32;4612:60;;4668:1;4665;4658:12;4612:60;4562:116;:::o;4684:137::-;4738:5;4769:6;4763:13;4754:22;;4785:30;4809:5;4785:30;:::i;:::-;4684:137;;;;:::o;4827:345::-;4894:6;4943:2;4931:9;4922:7;4918:23;4914:32;4911:119;;;4949:79;;:::i;:::-;4911:119;5069:1;5094:61;5147:7;5138:6;5127:9;5123:22;5094:61;:::i;:::-;5084:71;;5040:125;4827:345;;;;:::o;5178:180::-;5318:32;5314:1;5306:6;5302:14;5295:56;5178:180;:::o;5364:366::-;5506:3;5527:67;5591:2;5586:3;5527:67;:::i;:::-;5520:74;;5603:93;5692:3;5603:93;:::i;:::-;5721:2;5716:3;5712:12;5705:19;;5364:366;;;:::o;5736:419::-;5902:4;5940:2;5929:9;5925:18;5917:26;;5989:9;5983:4;5979:20;5975:1;5964:9;5960:17;5953:47;6017:131;6143:4;6017:131;:::i;:::-;6009:139;;5736:419;;;:::o;6161:191::-;6201:3;6220:20;6238:1;6220:20;:::i;:::-;6215:25;;6254:20;6272:1;6254:20;:::i;:::-;6249:25;;6297:1;6294;6290:9;6283:16;;6318:3;6315:1;6312:10;6309:36;;;6325:18;;:::i;:::-;6309:36;6161:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423600",
								"executionCost": "48995",
								"totalCost": "472595"
							},
							"external": {
								"charity()": "2555",
								"deposit()": "infinite",
								"donated()": "2429",
								"stETH()": "2580",
								"updateWallet(address)": "26911",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "AC241E664D7B7BD780F549B46345FCE584E789C1"
								},
								{
									"begin": 416,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 483,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 416,
									"end": 483,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 483,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 416,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 513,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "1643E812AE58766192CF7D2CF9567DF2C37E9B7F"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 490,
									"end": 555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 490,
									"end": 555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 1158,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffa82eaff2b7847f4b350c42a46bae973c43cbd43924a9cc575ed6430735593164736f6c63430008120033",
									".code": [
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "639BBB37"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "848B86E3"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "934AA023"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "C1FE3E48"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 1158,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 734,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 562,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 562,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 984,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 416,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 490,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 590,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 590,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 590,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 590,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 734,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 772,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 793,
											"end": 798,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 818,
											"end": 822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 787,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 787,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 787,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 772,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 772,
											"end": 824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 860,
											"end": 867,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 850,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 850,
											"end": 867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 850,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 850,
											"end": 867,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 850,
											"end": 867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 897,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 878,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 878,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 936,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 930,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 930,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 930,
											"end": 968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 930,
											"end": 968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 930,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 734,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 562,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1063,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1045,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1045,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 490,
											"end": 555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 590,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 646,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 641,
											"end": 646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "A1903EAB"
										},
										{
											"begin": 662,
											"end": 671,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 681,
											"end": 685,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 718,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 698,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 698,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2195,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2195,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2347,
											"end": 2356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2338,
											"end": 2345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2357,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2362,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2327,
											"end": 2446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2365,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2365,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2365,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2327,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2566,
											"end": 2573,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2510,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2574,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2510,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2597,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2771,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2863,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2877,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 2947,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2933,
											"end": 2970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2950,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2970,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2933,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3325,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3158,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3298,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7468696E6720746F2072657475726E000000000000000000000000000000"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3296,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3697,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3331,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3558,
											"end": 3560,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3494,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3494,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3659,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3570,
											"end": 3663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3663,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3570,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 4122,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3703,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3940,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4110,
											"end": 4114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3984,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 4122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 4122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 4122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4368,
											"end": 4369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4366,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4300,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4371,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4300,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4449,
											"end": 4451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4381,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4381,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4556,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4466,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4500,
											"end": 4507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4529,
											"end": 4550,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4518,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4518,
											"end": 4550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4556,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4678,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4562,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4647,
											"end": 4652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4632,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4625,
											"end": 4630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4622,
											"end": 4654,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4612,
											"end": 4672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4672,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4612,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4809,
											"end": 4814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4785,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4894,
											"end": 4900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4918,
											"end": 4941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4914,
											"end": 4946,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 5030,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4911,
											"end": 5030,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4949,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 5030,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4911,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5147,
											"end": 5154,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5094,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5155,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5094,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 5172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5358,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5178,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5350,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920636861726974792063616E207570646174652077616C6C65740000"
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5730,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5364,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5506,
											"end": 5509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5527,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5527,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5527,
											"end": 5594,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5527,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5603,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5603,
											"end": 5696,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5603,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 6155,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5736,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 5998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 5987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 5999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 5977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6143,
											"end": 6147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6017,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6148,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6017,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 6155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 6155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 6155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 6155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6201,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6220,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6220,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6220,
											"end": 6240,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6220,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6215,
											"end": 6240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6215,
											"end": 6240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6254,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6254,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6318,
											"end": 6321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6322,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6309,
											"end": 6345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6309,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6309,
											"end": 6345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6325,
											"end": 6343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6309,
											"end": 6345,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6309,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6161,
											"end": 6352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/GiveForever.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"charity()": "934aa023",
							"deposit()": "d0e30db0",
							"donated()": "639bbb37",
							"stETH()": "c1fe3e48",
							"updateWallet(address)": "848b86e3",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"charity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GiveForever.sol\":\"GiveForever\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/GiveForever.sol\":{\"keccak256\":\"0x1872492c40c151518a8580413b2b7ff674aa029179b066346a1bbb5f9f368515\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://432aa371e2c91f0b9921d10591d9001a7f2ca9496db260a7decc7a272d245931\",\"dweb:/ipfs/QmbV4KrPnQDkuXYW76jpaioN37Knk97FqCX3LBFCsmbFNk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 107,
								"contract": "contracts/GiveForever.sol:GiveForever",
								"label": "charity",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 110,
								"contract": "contracts/GiveForever.sol:GiveForever",
								"label": "stETH",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 112,
								"contract": "contracts/GiveForever.sol:GiveForever",
								"label": "donated",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ILido": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "sharesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referral",
									"type": "address"
								}
							],
							"name": "submit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "StETH",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_pubkeyHash",
									"type": "bytes32"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"sharesOf(address)": "f5eb42dc",
							"submit(address)": "a1903eab",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,bytes32)": "a8d2021a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"submit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"StETH\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GiveForever.sol\":\"ILido\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/GiveForever.sol\":{\"keccak256\":\"0x1872492c40c151518a8580413b2b7ff674aa029179b066346a1bbb5f9f368515\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://432aa371e2c91f0b9921d10591d9001a7f2ca9496db260a7decc7a272d245931\",\"dweb:/ipfs/QmbV4KrPnQDkuXYW76jpaioN37Knk97FqCX3LBFCsmbFNk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/GiveForever.sol": {
				"ast": {
					"absolutePath": "contracts/GiveForever.sol",
					"exportedSymbols": {
						"GiveForever": [
							190
						],
						"IERC20": [
							77
						],
						"ILido": [
							104
						]
					},
					"id": 191,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 78,
							"src": "71:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC20",
										"nameLocations": [
											"150:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "150:6:1"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "150:6:1"
								}
							],
							"canonicalName": "ILido",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								77
							],
							"name": "ILido",
							"nameLocation": "141:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a1903eab",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submit",
									"nameLocation": "173:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_referral",
												"nameLocation": "188:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "180:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:19:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "StETH",
												"nameLocation": "232:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:15:1"
									},
									"scope": 104,
									"src": "164:75:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8d2021a",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "254:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "271:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "263:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_pubkeyHash",
												"nameLocation": "288:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "280:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:38:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:1"
									},
									"scope": 104,
									"src": "245:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5eb42dc",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sharesOf",
									"nameLocation": "325:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "342:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "334:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:16:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "372:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "367:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "367:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:14:1"
									},
									"scope": 104,
									"src": "316:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "131:253:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GiveForever",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "GiveForever",
							"nameLocation": "397:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "934aa023",
									"id": 107,
									"mutability": "mutable",
									"name": "charity",
									"nameLocation": "431:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "416:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "416:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841633234314536363444374237624437383066353439623436333435666345353834453738394331",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "441:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAc241E664D7B7bD780f549b46345fcE584E789C1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c1fe3e48",
									"id": 110,
									"mutability": "mutable",
									"name": "stETH",
									"nameLocation": "505:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "490:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831363433453831326145353837363631393243663744324366393536376446324333376539423746",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "513:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "639bbb37",
									"id": 112,
									"mutability": "mutable",
									"name": "donated",
									"nameLocation": "574:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "562:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "562:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "624:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 124,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "681:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GiveForever_$190",
																		"typeString": "contract GiveForever"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GiveForever_$190",
																		"typeString": "contract GiveForever"
																	}
																],
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "673:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 122,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "673:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "673:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 116,
																		"name": "stETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "641:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 115,
																	"name": "ILido",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "635:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ILido_$104_$",
																		"typeString": "type(contract ILido)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "635:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILido_$104",
																	"typeString": "contract ILido"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "648:6:1",
															"memberName": "submit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 89,
															"src": "635:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) payable external returns (uint256)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 119,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "662:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "666:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "662:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "635:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_uint256_$value",
															"typeString": "function (address) payable external returns (uint256)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "635:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "635:52:1"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "donated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 129,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "709:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "713:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "709:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "698:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "698:20:1"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "599:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:1"
									},
									"scope": 190,
									"src": "590:136:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "761:215:1",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "777:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "772:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "772:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 145,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "818:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GiveForever_$190",
																		"typeString": "contract GiveForever"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GiveForever_$190",
																		"typeString": "contract GiveForever"
																	}
																],
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "810:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 143,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "810:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "810:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 140,
																	"name": "stETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "793:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 139,
																"name": "ILido",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "787:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILido_$104_$",
																	"typeString": "type(contract ILido)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "787:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILido_$104",
																"typeString": "contract ILido"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "800:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "787:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "772:52:1"
											},
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "surplus",
														"nameLocation": "840:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "835:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 149,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "835:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 151,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "850:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 152,
														"name": "donated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "860:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "850:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "835:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 156,
																"name": "surplus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "886:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "896:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "886:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f2072657475726e",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "899:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e",
																"typeString": "literal_string \"Nothing to return\""
															},
															"value": "Nothing to return"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c7e172fbf00d9351da73fd64e5a31a7cd931ab3d34caa91fd513ad09af0239e",
																"typeString": "literal_string \"Nothing to return\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "878:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "878:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "charity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "952:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "surplus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "960:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 163,
																	"name": "stETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "936:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 162,
																"name": "ILido",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "930:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILido_$104_$",
																	"typeString": "type(contract ILido)"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "930:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILido_$104",
																"typeString": "contract ILido"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "943:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "930:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "930:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "930:38:1"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "743:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:1"
									},
									"scope": 190,
									"src": "734:242:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1034:115:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 177,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1053:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1057:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1053:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 179,
																"name": "charity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1067:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1053:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920636861726974792063616e207570646174652077616c6c6574",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1076:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693",
																"typeString": "literal_string \"Only charity can update wallet\""
															},
															"value": "Only charity can update wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9b6a9dff24c7e372d7f0e18fd2576f813b47eac5993773933641712a73d6693",
																"typeString": "literal_string \"Only charity can update wallet\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1045:64:1"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "charity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1120:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1130:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1120:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1120:21:1"
											}
										]
									},
									"functionSelector": "848b86e3",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateWallet",
									"nameLocation": "993:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_newAddress",
												"nameLocation": "1014:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1006:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:21:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:1"
									},
									"scope": 190,
									"src": "984:165:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 191,
							"src": "388:770:1",
							"usedErrors": []
						}
					],
					"src": "36:1302:1"
				},
				"id": 1
			}
		}
	}
}